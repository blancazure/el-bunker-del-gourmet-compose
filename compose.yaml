services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    secrets:
      - mysql_root_password
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  golang-api:
    image: golang:1.20
    container_name: golang_api
    build:
      context: ./golang-api
      dockerfile: Dockerfile
    networks:
      - backend
      - frontend
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_NAME=${MYSQL_DATABASE}
      - DB_USER_FILE=/run/secrets/mysql_user
      - DB_PASSWORD_FILE=/run/secrets/mysql_password
    secrets:
      - mysql_user
      - mysql_password
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  node-app:
    image: node:18
    container_name: node_app
    build:
      context: ./node-app
      dockerfile: Dockerfile
    networks:
      - frontend
    environment:
      - API_URL=http://golang_api:8080
    ports:
      - "${NODE_PORT}:3000"
    depends_on:
      - golang-api

networks:
  frontend:
  backend:

volumes:
  db_data:

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_user:
    file: ./secrets/mysql_user.txt
  mysql_password:
    file: ./secrets/mysql_password.txt
